steps:
# Steps to pull a docker image for pgadmin, push it to container registry and deploy it to cloud run.
- name: "gcr.io/cloud-builders/docker"
  args: ['pull', 'dpage/pgadmin4']
- name: "gcr.io/cloud-builders/docker"
  args: ['tag', 'dpage/pgadmin4','gcr.io/chicago-business-intel/pgadmin']
- name: "gcr.io/cloud-builders/docker"
  args: ['push', 'gcr.io/chicago-business-intel/pgadmin']
  
- name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
  entrypoint: gcloud
  args: ['run', 'deploy','pg-admin', '--image','gcr.io/chicago-business-intel/pgadmin', '--region','us-central1', '--add-cloudsql-instances', 'chicago-business-intel:us-central1:mypostgres','--platform','managed', '--port','80', '--allow-unauthenticated','--set-env-vars','PGADMIN_DEFAULT_EMAIL=user@gmail.com','--set-env-vars','PGADMIN_DEFAULT_PASSWORD=SuperSecret']
  
# Steps to build a docker image for go-microservice, push it to container registry and deploy it to cloud run.  
- name: "gcr.io/cloud-builders/docker"
  args: ['build', '-t', 'gcr.io/chicago-business-intel/go-microservice','.']
- name: "gcr.io/cloud-builders/docker"
  args: ['push', 'gcr.io/chicago-business-intel/go-microservice']
  
- name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
  entrypoint: gcloud
  args: ['run', 'deploy','go-microservice', '--image','gcr.io/chicago-business-intel/go-microservice', '--region','us-central1', '--add-cloudsql-instances', 'chicago-business-intel:us-central1:mypostgres','--platform','managed', '--port','8080', '--allow-unauthenticated']

 # Build, push and  Deploy the Python front-end service
  - name: "gcr.io/cloud-builders/docker"
    args: ["build", "-t", "gcr.io/chicago-business-intel/frontend-service", "-f", "Dockerfile.frontend", "."]
  - name: "gcr.io/cloud-builders/docker"
    args: ["push", "gcr.io/chicago-business-intel/frontend-service"]
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: gcloud
    args: [
      "run", "deploy", "frontend-service",
      "--image", "gcr.io/chicago-business-intel/frontend-service",
      "--region", "us-central1",
      "--add-cloudsql-instances", "chicago-business-intel:us-central1:mypostgres",
      "--platform", "managed",
      "--port", "8082",
      "--allow-unauthenticated"
    ]




images:
- gcr.io/chicago-business-intel/go-microservice
- gcr.io/chicago-business-intel/pgadmin
- gcr.io/chicago-business-intel/frontend-service




options:
  logging: CLOUD_LOGGING_ONLY


  
